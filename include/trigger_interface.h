#ifndef _TRIGGER_INTERFACE_H
#define _TRIGGER_INTERFACE_H

namespace Numurus
{

/**
 * @brief      Abstract base (interface) class for nodes that can be triggered
 * 
 * 			   This class provides the basic ROS interface for nodes that support
 * 			   hardware triggering. 
 */	
class TriggerInterface
{
protected:
	/**
	 * @brief      Sets the input trigger mask value.
	 * 
	 * 			   This pure virtual method serves as the callback for the (private namespace) set_trig_mask topic. The trigger mask establishes
	 * 			   which software trigger input values (generated by the trigger manager in response to ROS messages) will cause this
	 * 			   node's trigger event to occur.
	 *
	 * @param[in]  trig_mask_val  The trigger mask value to set
	 */	
	virtual void setTrigMask(const std_msgs::UInt32::ConstPtr& trig_mask_val) = 0;

	/**
	 * @brief      Sets the input trigger delay value (in usecs).
	 * 
	 * 			   This method serves as the callback for the (private namespace) set_trig_delay topic
	 *
	 * @param[in]  trig_delay_val_usecs  The trigger delay value to set
	 */	
	virtual void setTrigDelay(const std_msgs::UInt32::ConstPtr& trig_delay_val_usecs) = 0;
};
} // namespace Numurus
#endif //_TRIGGER_INTERFACE_H